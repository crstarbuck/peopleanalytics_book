ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
employees$ytd_sales <- 2500 + rnorm(nrow(employees),5000,30)*employees$engagement + rnorm(nrow(employees),7500,40)*employees$job_lvl + rnorm(nrow(employees),3000,10)*employees$work_exp + rnorm(nrow(employees),2500,5)*employees$org_tenure + rnorm(nrow(employees),2500,5)*employees$job_tenure - rnorm(nrow(employees),5000,10)*employees$last_promo
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
write.csv(employees, results.csv, rownames = FALSE)
write.csv(employees, results.csv)
write.csv(employees, "results.csv")
# Load library
library(dplyr)
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
employees$ytd_sales <- 2500 + rnorm(nrow(employees),5000,5)*employees$engagement + rnorm(nrow(employees),7500,5)*employees$job_lvl + rnorm(nrow(employees),3000,5)*employees$work_exp + rnorm(nrow(employees),2500,5)*employees$org_tenure + rnorm(nrow(employees),2500,5)*employees$job_tenure - rnorm(nrow(employees),5000,5)*employees$last_promo
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
summary(data$ytd_sales)
employees$ytd_sales <- ifelse(employees$ytd_sales > 96094, 77125, employees$ytd_sales)
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
employees$ytd_sales <- 2500 + 5000*employees$engagement + 7500*employees$job_lvl + 3000*employees$work_exp + 2500*employees$org_tenure + 2500*employees$job_tenure - 5000*employees$last_promo + rnorm(nrow(employees), 0, 25)
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
employees$ytd_sales <- 2500 + 5000*employees$engagement + 7500*employees$job_lvl + 3000*employees$work_exp + 2500*employees$org_tenure + 2500*employees$job_tenure - 5000*employees$last_promo + rnorm(nrow(employees), 0, 10)
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
employees$ytd_sales <- 2500 + 5000*employees$engagement + 7500*employees$job_lvl + 3000*employees$work_exp + 2500*employees$org_tenure + 2500*employees$job_tenure - 5000*employees$last_promo + rnorm(nrow(employees), 0, 3)
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
View(data)
data[-99,m ]
data[-99, ]
data <- data[-99, ]
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
library(flextable)
# Produce tabular summary for model results using flextable
flextable::as_flextable(slm.fit)
write.csv(employees, "results.csv")
# Load library
library(dplyr)
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Log-transform YTD sales and refit model
slm.fit <- lm(log(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
View(employees)
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ work_exp, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ org_tenure, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Load library
library(dplyr)
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ org_tenure, data)
employees$ytd_sales <- 2500 + (5000*employees$engagement + rnorm(nrow(employees), 0, 3)) + 7500*employees$job_lvl + 3000*employees$work_exp + 2500*employees$org_tenure + 2500*employees$job_tenure - 5000*employees$last_promo + rnorm(nrow(employees), 0, 3)
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Log-transform YTD sales and refit model
slm.fit <- lm(sqrt(ytd_sales) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
write.csv(employees, "results.csv")
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
library(flextable)
# Produce tabular summary for model results using flextable
flextable::as_flextable(slm.fit)
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
library(flextable)
# Produce tabular summary for model results using flextable
flextable::as_flextable(slm.fit)
employees$ytd_sales <- 2500 + (5000*employees$engagement + rnorm(nrow(employees), 0, 5))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_sales ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
unique(employees$job_title)
employees$ytd_leads <- 2500 + (5000*employees$engagement + rnorm(nrow(employees), 0, 5))
employees$ytd_sales <- 2500 + (5000*employees$engagement + 7500*employees$job_lvl + 3000*employees$work_exp + 2500*employees$org_tenure + 2500*employees$job_tenure - 5000*employees$last_promo + rnorm(nrow(employees), 0, 5)
employees$ytd_leads <- 2500 + 5000*employees$engagement + rnorm(nrow(employees), 0, 5)
employees$ytd_sales <- 2500 + 5000*employees$engagement + 7500*employees$job_lvl + 3000*employees$work_exp + 2500*employees$org_tenure + 2500*employees$job_tenure - 5000*employees$last_promo + rnorm(nrow(employees), 0, 5)
write.csv(employees, "results.csv")
employees$ytd_leads <- 2 + 20*employees$engagement + rnorm(nrow(employees), 0, 5)
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_leads ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Sales Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
write.csv(employees, "results.csv")
# Load library
library(dplyr)
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Subset employees data frame; sales are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD sales on engagement
slm.fit <- lm(ytd_leads ~ engagement, data)
# Load library
library(dplyr)
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Subset employees data frame; leads are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD leads on engagement
slm.fit <- lm(ytd_leads ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Leads Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
# Transform YTD leads and refit model
slm.fit.trans <- lm(sqrt(ytd_leads) ~ engagement, data)
# Run the Breusch-Pagan test for evaluate homoscedasticity
lmtest::bptest(slm.fit.trans)
# Produce histogram to visualize distribution of model residuals
ggplot2::ggplot() +
ggplot2::aes(slm.fit$residuals) +
ggplot2::labs(x = "YTD Leads Residuals", y = "Density") +
ggplot2::geom_histogram(aes(y = ..density..), fill = "#414141") +
ggplot2::geom_density(fill = "#ADD8E6", alpha = 0.6) +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(slm.fit$residuals)
library(flextable)
# Produce tabular summary for model results using flextable
flextable::as_flextable(slm.fit)
8.9_91.1
8.9+91.1
ggplot2::ggplot(data = data, aes(x = engagement, y = ytd_leads)) +
ggplot2::labs(x = "Engagement", y = "YTD Leads") +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {slm.fit$coefficients[[2]]*x + slm.fit$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::annotate("text", x = 1.4, y = 120000, label = "y = 20.1x + 5.1", colour = "red") +
ggplot2::theme_bw()
ggplot2::ggplot(data = data, aes(x = engagement, y = ytd_leads)) +
ggplot2::labs(x = "Engagement", y = "YTD Leads") +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {slm.fit$coefficients[[2]]*x + slm.fit$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::annotate("text", x = 1.4, y = 60, label = "y = 20.1x + 5.1", colour = "red") +
ggplot2::theme_bw()
ggplot2::ggplot(data = data, aes(x = engagement, y = ytd_leads)) +
ggplot2::labs(x = "Engagement", y = "YTD Leads") +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {slm.fit$coefficients[[2]]*x + slm.fit$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::annotate("text", x = 1.4, y = 50, label = "y = 20.1x + 5.1", colour = "red") +
ggplot2::theme_bw()
ggplot2::ggplot(data = data, aes(x = engagement, y = ytd_leads)) +
ggplot2::labs(x = "Engagement", y = "YTD Leads") +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {slm.fit$coefficients[[2]]*x + slm.fit$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::annotate("text", x = 1.4, y = 40, label = "y = 20.1x + 5.1", colour = "red") +
ggplot2::theme_bw()
# Load library
library(dplyr)
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Subset employees data frame; leads are only applicable for those in sales positions
data <- subset(employees, job_title %in% c('Sales Executive', 'Sales Representative'))
# Regress YTD leads on engagement
slm.fit <- lm(ytd_leads ~ engagement, data)
# Produce 2x2 visuals for model diagnostics
par(mfrow = c(2,2))
plot(slm.fit)
library(flextable)
# Produce tabular summary for model results using flextable
flextable::as_flextable(slm.fit)
ggplot2::ggplot(data = data, aes(x = engagement, y = ytd_leads)) +
ggplot2::labs(x = "Engagement", y = "YTD Leads") +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {slm.fit$coefficients[[2]]*x + slm.fit$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::annotate("text", x = 1.4, y = 40, label = "y = 20.1x + 1.6", colour = "red") +
ggplot2::theme_bw()
library(ggplot2)
ggplot2::ggplot(data = data, aes(x = engagement, y = ytd_leads)) +
ggplot2::labs(x = "Engagement", y = "YTD Leads") +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {slm.fit$coefficients[[2]]*x + slm.fit$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::annotate("text", x = 1.4, y = 40, label = "y = 20.1x + 1.6", colour = "red") +
ggplot2::theme_bw()
