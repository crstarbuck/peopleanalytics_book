df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(X == 8, "red", "black")) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(X == 8, "red", "black")) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(1:nrow(data) == 8, "red", "black")) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Load library
library(ggplot2)
# Generate data with a linear relationship + some noise
X <- rnorm(20, 50, 10)
err = rnorm(20, 0, 15)
Y <- 100 + 4*X + err
# Construct basic data frame
df2 <- data.frame(X = X,
Y = Y)
# Fit simple linear model to data
lm.fit.2 <- lm(Y ~ X, df2)
# Save predicted values and residuals
df2$predicted <- predict(lm.fit.2)
df2$residuals <- residuals(lm.fit.2)
# Visualize model fit to observations
ggplot2::ggplot(data = df2, aes(x = X, y = Y)) +
ggplot2::geom_segment(aes(xend = X, yend = predicted)) +
ggplot2::geom_point(shape = 1) +
ggplot2::geom_point(aes(y = predicted)) +
ggplot2::geom_function(fun = function(x) {lm.fit.2$coefficients[[2]]*x + lm.fit.2$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Set seed for reproducibility
set.seed(1234)
# Construct basic data frame
df1 <- data.frame(X = c(25, 75),
Y = c(205, 390))
# Fit simple linear model to data
lm.fit.1 <- lm(Y ~ X, df1)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df1, aes(x = X, y = Y)) +
ggplot2::geom_point(color = "black") +
ggplot2::geom_function(fun = function(x) {lm.fit.1$coefficients[[2]]*x + lm.fit.1$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Generate data with a linear relationship + some noise
X <- rnorm(20, 50, 10)
err = rnorm(20, 0, 15)
Y <- 100 + 4*X + err
# Construct basic data frame
df2 <- data.frame(X = X,
Y = Y)
# Fit simple linear model to data
lm.fit.2 <- lm(Y ~ X, df2)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df2, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {lm.fit.2$coefficients[[2]]*x + lm.fit.2$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(1:nrow(data$X) == 8, "red", "black")) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(1:nrow(df.out) == 8, "red", "black")) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black")) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8 == 8, 3, 1)) +
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 3, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
n <- 20
x <- runif(n, 0, 5)
y <- 1 + 3*x + rnorm(n, 0, 1)
df.orig <- data.frame(X = x, Y = y)
# Model data
model <- lm(y ~ x)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 3, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 3, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
# Simulate n observations
n <- 20
X <- runif(n, 0, 5)
Y <- 1 + 3*X + rnorm(n, 0, 1)
df.orig <- data.frame(X = X, Y = Y)
# Model data
model <- lm(Y ~ X)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 2, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 2, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
# Set seed for reproducibility
set.seed(1234)
# Simulate n observations
n <- 20
X <- runif(n, 0, 5)
Y <- 1 + 3*X + rnorm(n, 0, 1)
df.orig <- data.frame(X = X, Y = Y)
# Model data
model <- lm(Y ~ X)
summary(model)
# Visualize model fit to observations
p1 <- ggplot2::ggplot(data = df.orig, aes(x = X, y = Y)) +
ggplot2::geom_point() +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with non-influential outliers
x.out <- c(x, 8)
y.out <- c(y, 25)
df.out <- data.frame(X = x.out, Y = y.out)
model.out <- lm(y.out ~ x.out)
summary(model.out)
# Visualize model fit to observations
p2 <- ggplot2::ggplot(data = df.out, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 2, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.out$coefficients[[2]]*x + model.out$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Model data with influential (high leverage) observations
x.lev <- c(x, 8)
y.lev <- c(y, 5)
df.lev <- data.frame(X = x.lev, Y = y.lev)
model.lev <- lm(y.lev ~ x.lev)
summary(model.lev)
# Visualize model fit to observations
p3 <- ggplot2::ggplot(data = df.lev, aes(x = X, y = Y)) +
ggplot2::geom_point(col = ifelse(df.out$X == 8, "red", "black"), size = ifelse(df.out$X == 8, 2, 1)) +
ggplot2::geom_function(fun = function(x) {model$coefficients[[2]]*x + model$coefficients[[1]]}, colour = "black", linetype = "solid") +
ggplot2::geom_function(fun = function(x) {model.lev$coefficients[[2]]*x + model.lev$coefficients[[1]]}, colour = "red", linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(axis.title.y = element_text(face = "italic"), axis.title.x = element_text(face = "italic"))
# Display distribution visualizations
ggpubr::ggarrange(p2, p3, ncol = 2, nrow = 1)
