ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_2, "\n(n = ", n2, ", ", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(-500, 600)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#343434"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_2, "\n(n = ", n2, ", ", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(-500, 600)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_1, "\n(n = ", n1, ", ", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_2, "\n(n = ", n2, ", ", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(-500, 600)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_1, "\n(n = ", n1, ", ", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_2, "\n(n = ", n2, ", ", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(-500, 600)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = "Figure A", x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(-500, 600)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = "Figure A", x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(-300, 450)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = "Figure A", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = "Figure A", x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(90, 110)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = "Figure A", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Load library
library(dplyr)
library(ggplot2)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Store mean values in df
mean_df1 <- ab1 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = "Figure A", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df1, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 400))
b2 <- data.frame(x = rnorm(n2, 170, 400))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Store mean values in df
mean_df2 <- ab2 %>%
group_by(group) %>%
summarize(mean = mean(x))
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = "Figure B", x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual(values = c("skyblue", "lightgrey")) +
ggplot2::geom_vline(data = mean_df2, aes(xintercept = mean), colour = c("blue", "#3D3D3D"), size = .5, linetype = "dashed") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
