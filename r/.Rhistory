library(peopleanalyticsdata)
install.packages("peopleanalyticsdata")
library(peopleanalyticsdata)
data(package = "peopleanalyticsdata")
?benefits
?benefits
help(benefits)
peopleanalytics::help(benefits)
help(benefits)
help(employees)
help(mean)
help(employees)
knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/r_help.png")
help(demographics)
help(tenure)
help(turnover_trends)
help(sentiment)
?sentiment
?benefits
?sentiment
help(sentiment)
knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/r_help.png")
help(benefits)
help(demographics)
help(survey_responses)
data("benefits")
data("demographics")
peopleanalytics::benefits
# Load data sets
library(peopleanalytics)
# Return row and column counts
dim(employees)
#knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/scientific_method.png")
knitr::include_graphics("https://github.com/crstarbuck/peopleanalytics_book/blob/master/graphics/scientific_method.png")
#knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/scientific_method.png")
knitr::include_graphics("https://github.com/crstarbuck/peopleanalytics_book/blob/master/graphics/scientific_method.png")
#knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/scientific_method.png")
knitr::include_graphics("https://github.com/crstarbuck/peopleanalytics_book/blob/master/graphics/scientific_method.png")
#knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/scientific_method.png")
knitr::include_graphics("https://github.com/crstarbuck/peopleanalytics_book/blob/master/graphics/scientific_method.png")
#knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_book/graphics/scientific_method.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/scientific_method.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/4d_framework_overview.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/r_help.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/dw_schema.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/dw_erd.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/sql_joins.png")
# Load data sets
library(peopleanalytics)
# Return row and column counts
dim(employees)
# Load library
library(sqldf)
# Store SQL query as a character string using the paste() function
sql_string <- paste("SELECT
employee_id
FROM
employees
WHERE
dept = 'Research & Development'
LIMIT 10")
# Execute SQL query
sqldf::sqldf(sql_string)
# Store SQL query as a character string
sql_string <- paste("SELECT
job_title,
AVG(org_tenure)
FROM
employees
WHERE
dept = 'Research & Development'
GROUP BY
job_title")
# Execute SQL query
sqldf::sqldf(sql_string)
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/research_designs.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/conceptual_model.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/ww2_plane_damage.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/reliability_validity.png")
# Load libraries
library(dplyr)
library(peopleanalytics)
# Set seed for reproducible results
set.seed(1234)
# Sample 10 employees randomly
n = 10
sample(employees$employee_id, n, replace = F)
# Return employee counts by department
employees |>
dplyr::group_by(dept) |>
dplyr::summarise(n = dplyr::n())
# Load library
library(dplyr)
# Return employee counts by department
employees |>
dplyr::group_by(dept) |>
dplyr::summarise(n = dplyr::n())
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/type_2_table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/type_1_table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/onehot_encoding.png")
# Load data
library(peopleanalytics)
# Calculate sample variance for annual compensation
var(employees$annual_comp)
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/kurtosis.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/kurtosis.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/kurtosis.jpg")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/correlation_table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/phi_coefficient_formula.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/phi_coefficient_formula.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/correlation_comic.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/spurious_corr_maine_divorce.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/spurious_corr_mozzarella_cheese.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/skewness.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/confidence_intervals.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/t_distribution.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/t-table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/hypothesis_testing_errors.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/conventional_effect_size_table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/normal_distribution.png")
library(ggpubr)
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/discrete_differences_test_table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/continuous_differences_test_table.png")
# Load data
library(peopleanalytics)
# Create contingency table
cont_tbl <- table(employees$active, employees$overtime)
cont_tbl
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/contingency_table.png")
# Load library
library(graphics)
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/mediation_paths.png")
# Load data
library(peopleanalytics)
# Store data in df with curtailed name
turnover <- turnover_trends
# Subset data
ps_turnover <- subset(turnover, job == 'People Scientist' & level == 4)
p_ps_yr1 <- ggplot2::ggplot(data = subset(ps_turnover, year == 1), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 1", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr2 <- ggplot2::ggplot(data = subset(ps_turnover, year == 2), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 2", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr3 <- ggplot2::ggplot(data = subset(ps_turnover, year == 3), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 3", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr4 <- ggplot2::ggplot(data = subset(ps_turnover, year == 4), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 4", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr5 <- ggplot2::ggplot(data = subset(ps_turnover, year == 5), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 5", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Display distribution visualizations
ggpubr::ggarrange(p_ps_yr1, p_ps_yr2, p_ps_yr3, p_ps_yr4, p_ps_yr5, ncol = 3, nrow = 2)
# Load library
library(ggplot2)
# Load data
library(peopleanalytics)
# Store data in df with curtailed name
turnover <- turnover_trends
# Subset data
ps_turnover <- subset(turnover, job == 'People Scientist' & level == 4)
p_ps_yr1 <- ggplot2::ggplot(data = subset(ps_turnover, year == 1), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 1", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr2 <- ggplot2::ggplot(data = subset(ps_turnover, year == 2), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 2", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr3 <- ggplot2::ggplot(data = subset(ps_turnover, year == 3), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 3", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr4 <- ggplot2::ggplot(data = subset(ps_turnover, year == 4), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 4", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr5 <- ggplot2::ggplot(data = subset(ps_turnover, year == 5), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 5", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Display distribution visualizations
ggpubr::ggarrange(p_ps_yr1, p_ps_yr2, p_ps_yr3, p_ps_yr4, p_ps_yr5, ncol = 3, nrow = 2)
# Load data
library(peopleanalytics)
# Store data in df with curtailed name
turnover <- turnover_trends
# Subset data
ps_turnover <- subset(turnover, job == 'People Scientist' & level == 4)
# Load library
library(ggplot2)
p_ps_yr1 <- ggplot2::ggplot(data = subset(ps_turnover, year == 1), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 1", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr2 <- ggplot2::ggplot(data = subset(ps_turnover, year == 2), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 2", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr3 <- ggplot2::ggplot(data = subset(ps_turnover, year == 3), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 3", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr4 <- ggplot2::ggplot(data = subset(ps_turnover, year == 4), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 4", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
p_ps_yr5 <- ggplot2::ggplot(data = subset(ps_turnover, year == 5), aes(x = month, y = turnover_rate, colour = remote)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::scale_x_continuous(breaks = 1:12) +
ggplot2::scale_y_continuous(breaks = 1:10) +
ggplot2::scale_color_manual(values = c("#B8BDBF", "#595959")) +
ggplot2::labs(title = "Year 5", x = "Month", y = "Turnover Rate") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "none") +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Display distribution visualizations
ggpubr::ggarrange(p_ps_yr1, p_ps_yr2, p_ps_yr3, p_ps_yr4, p_ps_yr5, ncol = 3, nrow = 2)
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/confusion_matrix.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/bias_variance_tradeoff.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/decision_tree.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/stats_ml_satire.png")
employees
# Load data
library(peopleanalytics)
# Load employee data
prediction_dat <- employees
# One-hot encode active outcome variable, setting inactives to 1 and actives to 0
prediction_dat$active <- ifelse(prediction_dat$active == 'No', 1, 0)
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/combo_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/sankey_1.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/sankey_2.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/sankey_3.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/sankey_4.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/bad_viz-pie_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/pie_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/3d_pie_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/3d_bar_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/horizontal_bar_chart_2.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/good_viz-job_loss.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/light_heavy_borders.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/bad_viz-flipped_y_axis.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/preattentive_attributes.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_step_1.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_step_2.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_step_3.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_step_4.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_step_9.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_step_10.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/viz_pre_post.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/data_table.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/heatmap.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/scatterplot_1.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/scatterplot_2.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/bad_viz-cumulative_trend.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/line_graph_single.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/line_graph_double.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/line_graph_multi.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/vertical_bar_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/horizontal_bar_chart_1.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/stacked_bar_chart.png")
knitr::include_graphics("https://raw.githubusercontent.com/crstarbuck/peopleanalytics_book/master/graphics/bidirectional_bar_chart.png")
# Load libraries
library(dplyr)
library(ggplot2)
# Load data
library(peopleanalytics)
# Create data cube for active employees
smmry_ed_field <- employees |>
dplyr::filter(active == 'Yes') |>
dplyr::count(ed_field)
# Step 1: Build Bar Chart with Defaults
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity")
# Step 2: Remove Legend
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::theme(legend.position = "none")
# Step 3: Assign Colors Strategically
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none")
# Step 4: Add Axis Titles and Margins
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::labs(x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0)))
# Step 5: Add Left-Justified Title
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
plot.title = ggplot2::element_text(hjust = 0),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0)))
# Step 6: Remove Background
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
panel.background = ggplot2::element_blank(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0)))
# Step 7: Remove Axis Ticks
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
panel.background = ggplot2::element_blank(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0)),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0)),
axis.ticks.x = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank())
# Step 8: Mute Titles
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
panel.background = ggplot2::element_blank(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0), colour = "#404040"),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0), colour = "#404040"),
plot.title = ggplot2::element_text(hjust = 0, colour = "#404040"),
axis.ticks.x = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank())
# Step 9: Flip Axes
ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
panel.background = ggplot2::element_blank(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0), colour = "#404040"),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0), colour = "#404040"),
plot.title = ggplot2::element_text(hjust = 0, colour = "#404040"),
axis.ticks.x = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank())
# Step 10: Sort Data
ggplot2::ggplot(smmry_ed_field, aes(x = reorder(ed_field, n), y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
panel.background = ggplot2::element_blank(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0), colour = "#404040"),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0), colour = "#404040"),
plot.title = ggplot2::element_text(hjust = 0, colour = "#404040"),
axis.ticks.x = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank())
# Pre/post viz comparison
viz_pre <- ggplot2::ggplot(smmry_ed_field, aes(x = ed_field, y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity")
viz_post <- ggplot2::ggplot(smmry_ed_field, aes(x = reorder(ed_field, n), y = n, fill = as.factor(ed_field))) +
ggplot2::geom_bar(stat = "identity") +
ggplot2::coord_flip() +
ggplot2::labs(title = 'Life Sciences is the most common education field \npursued by active employees.', x = 'Education Field', y = 'Headcount') +
ggplot2::scale_fill_manual(values = c("Human Resources" = "#BFBFBF",
"Life Sciences" = "#0070C0",
"Marketing" = "#BFBFBF",
"Medical" = "#BFBFBF",
"Other" = "#BFBFBF",
"Technical Degree" = "#BFBFBF")) +
ggplot2::theme(legend.position = "none",
panel.background = ggplot2::element_blank(),
axis.title.x = ggplot2::element_text(margin = ggplot2::margin(t = 10, r = 0, b = 0, l = 0), colour = "#404040"),
axis.title.y = ggplot2::element_text(margin = ggplot2::margin(t = 0, r = 10, b = 0, l = 0), colour = "#404040"),
plot.title = ggplot2::element_text(hjust = 0, colour = "#404040"),
axis.ticks.x = ggplot2::element_blank(),
axis.ticks.y = ggplot2::element_blank())
# Display pre/post visualizations side-by-side
ggpubr::ggarrange(viz_post, viz_pre, ncol = 1, nrow = 2)
