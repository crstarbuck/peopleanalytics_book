forecast.perf(
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Initialize empty data frame for model performance stats
forecast.perf.metrics <- NULL
# Predict on test_dat_1
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_1", nrow(cube.fit.1.rslts)),
year = rep(test_dat_1$year, nrow(cube.fit.1.rslts)),
month = rep(test_dat_1$month, nrow(cube.fit.1.rslts)),
forecast.perf(
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_2", nrow(cube.fit.2.rslts)),
year = rep(test_dat_2$year, nrow(cube.fit.2.rslts)),
month = rep(test_dat_2$month, nrow(cube.fit.2.rslts)),
forecast.perf(
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_3", nrow(cube.fit.3.rslts)),
year = rep(test_dat_3$year, nrow(cube.fit.3.rslts)),
month = rep(test_dat_3$month, nrow(cube.fit.3.rslts)),
forecast.perf(
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
26*3
36*3
# Initialize empty list and data frame for model performance stats
perf.metrics <- list()
forecast.perf.metrics <- NULL
# Predict on test_dat_3
perf.metrics <- forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))
perf.metrics
# Predict on test_dat_3
perf.metrics <- forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))
length(perf.metrics)
nrow(perf.metrics)
# Initialize empty list and data frame for model performance stats
perf.metrics <- list()
forecast.perf.metrics <- NULL
for (month in 1:12){
# Predict on test_dat_1
perf.metrics <- forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_1", nrow(perf.metrics)),
month = month,
actual = perf.metrics[['stat_nm']],
predicted = perf.metrics[['stat_val']]))
# Predict on test_dat_2
perf.metrics <- forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_2", nrow(perf.metrics)),
month = month,
actual = perf.metrics[['stat_nm']],
predicted = perf.metrics[['stat_val']]))
# Predict on test_dat_3
perf.metrics <- forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_3", nrow(perf.metrics)),
month = month,
actual = perf.metrics[['stat_nm']],
predicted = perf.metrics[['stat_val']]))
}
# Initialize empty list and data frame for model performance stats
perf.metrics <- list()
forecast.perf.metrics <- NULL
for (month in 1:12){
# Predict on test_dat_1
perf.metrics <- forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_1", nrow(perf.metrics)),
month = rep(month, nrow(perf.metrics)),
actual = perf.metrics[['stat_nm']],
predicted = perf.metrics[['stat_val']]))
# Predict on test_dat_2
perf.metrics <- forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_2", nrow(perf.metrics)),
month = rep(month, nrow(perf.metrics)),
actual = perf.metrics[['stat_nm']],
predicted = perf.metrics[['stat_val']]))
# Predict on test_dat_3
perf.metrics <- forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_3", nrow(perf.metrics)),
month = rep(month, nrow(perf.metrics)),
actual = perf.metrics[['stat_nm']],
predicted = perf.metrics[['stat_val']]))
}
month =1
# Predict on test_dat_1
perf.metrics <- forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))
rep("test_dat_1", nrow(perf.metrics))
perf.metrics[['stat_nm']]
perf.metrics[['stat_val']]
actual = test_dat_1$turnover_rate
predicted = predict(train.cube.fit.1, test_dat_1, type = "response")
# Check for missing values; metrics will be computed on non-missing values only
predicted <- predicted[!is.na(actual)]
actual <- actual[!is.na(actual)]
actual <- actual[!is.na(predicted)]
# Store rates to variables
mad <- round(mean(abs(actual - predicted)), 2)
mse <- round(mean((actual - predicted)^2), 2)
mape <- round(mean(abs((actual - predicted) / actual)) * 100, 2)
mad
mse
mape
# Format output
stat_nm <- c("mad", "mse", "mape")
stat_vl <- c(mad, mse, mape)
data.frame(stat_nm, stat_vl)
# Format output
stat_nm <- c("mad", "mse", "mape")
stat_vl <- c(mad, mse, mape)
data.frame(stat_nm, stat_vl)
stat_vl
data.frame(stat_nm, stat_vl)
as.data.frame(stat_nm, stat_vl)
mad
mse
mape
# Format output
stat_nm <- c("mad", "mse", "mape")
stat_vl <- c(mad, mse, mape)
# Return model performance statistics in a data frame
return(data.frame(stat_nm, stat_vl))
data.frame(stat_nm, stat_vl)
# Develop function that returns a data frame of forecasting model performance statistics
forecast.perf <- function(actual, predicted){
# Check for missing values; metrics will be computed on non-missing values only
predicted <- predicted[!is.na(actual)]
actual <- actual[!is.na(actual)]
actual <- actual[!is.na(predicted)]
# Store rates to variables
mad <- round(mean(abs(actual - predicted)), 2)
mse <- round(mean((actual - predicted)^2), 2)
mape <- round(mean(abs((actual - predicted) / actual)) * 100, 2)
# Return model performance statistics in a data frame
return(data.frame(mad, mse, mape))
}
# Initialize empty list and data frame for model performance stats
perf.metrics <- list()
forecast.perf.metrics <- NULL
# Predict on test_dat_1
perf.metrics <- forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_1", nrow(perf.metrics)),
month = rep(month, nrow(perf.metrics)),
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr,
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Initialize empty data frame for model performance stats
forecast.perf.metrics <- NULL
# Predict on test_dat_1
forecast.perf.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = rep("test_dat_1", nrow(perf.metrics)),
month = rep(month, nrow(perf.metrics)),
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr,
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
View(forecast.perf.metrics)
# Initialize empty data frame for model performance stats
forecast.perf.metrics <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))
View(forecast.err.rates)
# Initialize empty data frames for model predictions and performance stats
forecast.perf.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
View(forecast.err.rates)
# Initialize empty data frames for model predictions and performance stats
forecast.perf.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Initialize empty data frames for model predictions and performance stats
forecast.perf.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.perf.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
View(forecast.metrics)
# Initialize empty data frames for model predictions and performance stats
forecast.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
test_data_1
# Create training data
train_dat_1 <- forecasting_dat %>% filter(job == 'People Scientist' & level == '1' & year %in% 1:4)
train_dat_2 <- forecasting_dat %>% filter(job == 'Data Engineer' & level == '2' & year %in% 1:4)
train_dat_3 <- forecasting_dat %>% filter(job == 'Insights Consultant' & level == '3' & year %in% 1:4)
# Create test data
test_dat_1 <- forecasting_dat %>% filter(job == 'People Scientist' & level == '1' & remote == 1 & year == 5)
test_dat_2 <- forecasting_dat %>% filter(job == 'Data Engineer' & level == '2' & remote == 0 & year == 5)
test_dat_3 <- forecasting_dat %>% filter(job == 'Insights Consultant' & level == '3' & remote == 1 & year == 5)
# Develop function that returns a data frame of forecasting model performance statistics
forecast.perf <- function(actual, predicted){
# Check for missing values; metrics will be computed on non-missing values only
predicted <- predicted[!is.na(actual)]
actual <- actual[!is.na(actual)]
actual <- actual[!is.na(predicted)]
# Store rates to variables
mad <- round(mean(abs(actual - predicted)), 2)
mse <- round(mean((actual - predicted)^2), 2)
mape <- round(mean(abs((actual - predicted) / actual)) * 100, 2)
# Return model performance statistics in a data frame
return(data.frame(mad, mse, mape))
}
# Initialize empty data frames for model predictions and performance stats
forecast.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
test_data_3
test_dat_3
# Initialize empty data frames for model predictions and performance stats
forecast.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
# Initialize empty data frames for model predictions and performance stats
forecast.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
# Initialize empty data frames for model predictions and performance stats
forecast.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_data_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_data_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_data_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_data_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
test_data_3$month
# Initialize empty data frames for model predictions and performance stats
forecast.metrics <- NULL
forecast.err.rates <- NULL
# Predict on test_dat_1
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_1",
month = test_dat_1$month,
actual = test_dat_1$turnover_rate,
predicted = predict(train.cube.fit.1, test_dat_1, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.1, test_dat_1, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_dat_1",
forecast.perf(actual = test_dat_1$turnover_rate, predicted = predict(train.cube.fit.1, test_dat_1, type = "response"))))
# Predict on test_dat_2
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_2",
month = test_dat_2$month,
actual = test_dat_2$turnover_rate,
predicted = predict(train.cube.fit.2, test_dat_2, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.2, test_dat_2, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_dat_2",
forecast.perf(actual = test_dat_2$turnover_rate, predicted = predict(train.cube.fit.2, test_dat_2, type = "response"))))
# Predict on test_dat_3
forecast.metrics <- rbind(forecast.metrics, cbind.data.frame(
data = "test_dat_3",
month = test_dat_3$month,
actual = test_dat_3$turnover_rate,
predicted = predict(train.cube.fit.3, test_dat_3, type = "response"),
lwr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$lwr,
upr_bound = as.data.frame(predict(train.cube.fit.3, test_dat_3, type = "response", interval = "predict"))$upr))
forecast.err.rates <- rbind(forecast.err.rates, cbind.data.frame(
data = "test_dat_3",
forecast.perf(actual = test_dat_3$turnover_rate, predicted = predict(train.cube.fit.3, test_dat_3, type = "response"))))
nrow(forecast.metrics)
