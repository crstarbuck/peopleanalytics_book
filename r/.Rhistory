# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 100
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("Mean Difference = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"), x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 75
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 155, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("Mean Difference = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"), x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 100
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("Mean Difference = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"), x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("Mean Difference = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"), x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("Mean Difference = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"), x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("Mean Difference = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"), x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(75, 125)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(90, 110)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_1, "\n(n = ", n1, ",", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_2, "\n(n = ", n2, ",", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
# Set seed for reproducible random numbers
set.seed(123)
### Example 1 ###
# Define sample size
n1 = 50
# Draw random numbers from normal distribution per defined parameters
a1 <- data.frame(x = rnorm(n1, 100, .5))
b1 <- data.frame(x = rnorm(n1, 101, .5))
# Label groups and combine within single df
a1$group <- 'a'
b1$group <- 'b'
ab1 <- rbind(a1, b1)
# Calculate absolute mean difference
xbar_delta_1 <- abs(round(mean(ab1[ab1$group == 'b', 'x']) - mean(ab1[ab1$group == 'a', 'x']), 0))
t_test_1 <- t.test(ab1[ab1$group == 'a', 'x'], ab1[ab1$group == 'b', 'x'])
# Store viz to object
p1 <- ggplot2::ggplot(ab1, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_1, "\n(n = ", n1, ", ", ifelse(t_test_1$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(95, 105)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Example 2 ###
# Define sample size
n2 = 50
# Draw random numbers from normal distribution per defined parameters
a2 <- data.frame(x = rnorm(n2, 200, 90))
b2 <- data.frame(x = rnorm(n2, 150, 90))
# Label groups and combine within single df
a2$group <- 'a'
b2$group <- 'b'
ab2 <- rbind(a2, b2)
# Calculate absolute mean difference
xbar_delta_2 <- abs(round(mean(ab2[ab2$group == 'b', 'x']) - mean(ab2[ab2$group == 'a', 'x']), 0))
t_test_2 <- t.test(ab2[ab2$group == 'a', 'x'], ab2[ab2$group == 'b', 'x'])
# Store viz to object
p2 <- ggplot2::ggplot(ab2, aes(x, fill = group)) +
ggplot2::labs(title = paste0("MD = ", xbar_delta_2, "\n(n = ", n2, ", ", ifelse(t_test_2$p.value < .05, "p < .05", "p > .05"), ")"),
x = "x", y = "Density") +
ggplot2::scale_x_continuous(limits = c(0, 500)) +
ggplot2::geom_density(alpha = 0.6) +
ggplot2::scale_fill_manual( values = c("skyblue","lightgrey")) +
ggplot2::theme_bw()
### Plot ###
# Visualize density plots side-by-side
ggpubr::ggarrange(p1, p2, ncol = 2, nrow = 1)
