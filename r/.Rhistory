i = 1
df = NULL
for (a in 1:4) {
for (b in 1:4){
for (c in 1:4){
for (d in 1:4){
df <- rbind(df, cbind.data.frame(
result = paste0(a,b,c,d)))
i = i+1
}
}
}
}
View(df)
unique(df$result)
length(unique(df$result))
4*3*2*1 / 4*3*2*1
4*3*2*1
2^4 - 4 - 1
pre_group_ctrl_ind
unique(pre_group_ctrl_ind)
ctrl_diff
treat_diff
unique(treat_diff)
unique(ctrl_diff)
post_group_treat_ind
pre_group_treat_ind
post_group_treat_ind - pre_group_treat_ind
post_group_treat_ind
pre_group_treat_ind
unique(post_group_treat_ind)
unique(pre_group_treat_ind)
lapply(post_group_treat_ind, function(x) x - pre_group_treat_ind)
# Calculate pre/post differences
treat_diff <- lapply(post_group_treat_ind, function(x) x - pre_group_treat_ind)
ctrl_diff <- lapply(post_group_ctrl_ind, function(x) x - pre_group_ctrl_ind)
treat_diff
# Calculate pre/post differences
treat_diff <- lapply(post_group_treat_ind, function(x) x - pre_group_treat_ind)
ctrl_diff <- lapply(post_group_ctrl_ind, function(x) x - pre_group_ctrl_ind)
# Compute Shapiro-Wilk test of normality
shapiro.test(treat_diff)
class(treat_diff)
# Calculate pre/post differences
treat_diff <- unlist(lapply(post_group_treat_ind, function(x) x - pre_group_treat_ind))
ctrl_diff <- unlist(lapply(post_group_ctrl_ind, function(x) x - pre_group_ctrl_ind))
# Compute Shapiro-Wilk test of normality
shapiro.test(treat_diff)
treat_diff
length(treat_diff)
length(post_group_treat_ind)
class(post_group_treat_ind)
?subtract
subtract(post_group_treat_ind - pre_group_treat_ind)
post_group_treat_ind - pre_group_treat_ind
a = c(1, 2, 3)
b = c(4, 5, 6)
b-a
post_group_treat_ind - pre_group_treat_ind
post_group_treat_ind + pre_group_treat_ind
?dist
employees$engagement - employees$rel_sat
# Initialize empty df for storing metrics
pre_post_metrics = NULL
# Initialize empty df for storing metrics
pre_post_metrics = NULL
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty df for storing metrics
pre_post_metrics = NULL
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.3, .4), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(.1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
View(pre_post_metrics)
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Initialize empty list for storing pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.3, .4), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(.1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
class(pre_post_metrics)
ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(x = "Pre/Post Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3, .4), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(x = "Pre/Post Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.1, .2, .3), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3, .4), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(x = "Pre/Post Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
library(ggpubr)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3, .4), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
p_treat <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(title = "Pre/Post Treatment Group Differences", x = "Pre/Post Happiness Index Difference", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
p_ctrl <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$ctrl_diff) +
ggplot2::labs(title = "Pre/Post Control Group Differences", x = "Pre/Post Happiness Index Difference", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
ggpubr::ggarrange(p_treat, p_ctrl,
ncol = 2, nrow = 1)
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(.1, .2), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Histogram for distribution of pre/post treatment group differences
p_treat <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(title = "Treatment Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Histogram for distribution of pre/post control group differences
p_ctrl <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$ctrl_diff) +
ggplot2::labs(title = "Control Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Display histograms side-by-side
ggpubr::ggarrange(p_treat, p_ctrl, ncol = 2, nrow = 1)
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Histogram for distribution of pre/post treatment group differences
p_treat <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(title = "Treatment Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Histogram for distribution of pre/post control group differences
p_ctrl <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$ctrl_diff) +
ggplot2::labs(title = "Control Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Display histograms side-by-side
ggpubr::ggarrange(p_treat, p_ctrl, ncol = 2, nrow = 1)
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Set seed for reproducible results
set.seed(1234)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
pre_group_treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
pre_group_ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% pre_group_treat_ids, select = employee_id))
# Initialize empty list for central storage of pre/post metrics
pre_post_metrics = list()
# Store happiness indices for treatment and control groups
pre_post_metrics$pre_group_treat_ind <- unlist(subset(employees, employee_id %in% pre_group_treat_ids, select = happiness_ind))
pre_post_metrics$pre_group_ctrl_ind <- unlist(subset(employees, employee_id %in% pre_group_ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
post_group_treat_ind <- pre_group_treat_ind + sample(c(.2, .3), 1, replace = TRUE)
post_group_ctrl_ind <- pre_group_ctrl_ind + sample(c(0, .1), 1, replace = TRUE)
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
pre_post_metrics$post_group_treat_ind <- if(post_group_treat_ind > 4) {4} else {post_group_treat_ind}
pre_post_metrics$post_group_ctrl_ind <- if(post_group_ctrl_ind > 4) {4} else {post_group_ctrl_ind}
# Calculate pre/post differences
pre_post_metrics$treat_diff <- pre_post_metrics$post_group_treat_ind - pre_post_metrics$pre_group_treat_ind
pre_post_metrics$ctrl_diff <- pre_post_metrics$post_group_ctrl_ind - pre_post_metrics$pre_group_ctrl_ind
# Histogram for distribution of pre/post treatment group differences
p_treat <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$treat_diff) +
ggplot2::labs(title = "Treatment Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Histogram for distribution of pre/post control group differences
p_ctrl <- ggplot2::ggplot() +
ggplot2::aes(pre_post_metrics$ctrl_diff) +
ggplot2::labs(title = "Control Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw()
# Display histograms side-by-side
ggpubr::ggarrange(p_treat, p_ctrl, ncol = 2, nrow = 1)
# Compute Shapiro-Wilk test of normality
shapiro.test(pre_post_metrics$treat_diff)
shapiro.test(pre_post_metrics$ctrl_diff)
knitr::include_graphics("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/graphics/contingency_table.png")
# Load employee data
employees <- read.csv("/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/employees.csv")
# Load library
library(ggplot2)
library(ggpubr)
# Subset data
data <- subset(employees, job_title %in% c('Manager', 'Research Scientist'), select = c(annual_comp, job_title))
# Produce boxplots to visualize compensation distribution by job title
ggplot2::ggplot(data, aes(x = as.factor(job_title), y = annual_comp, color = job_title)) +
ggplot2::labs(x = "Job Title", y = "Annual Compensation") +
ggplot2::guides(col = guide_legend("Job Title")) +
ggplot2::theme_bw() +
ggplot2::geom_boxplot()
# Create dummy-coded promotion variable
employees$promo <- ifelse(employees$last_promo == 1, 1, 0)
# Create numeric engagement vectors for promo groups
no_promo <- unlist(subset(employees, promo == 0, select = engagement))
promo <- unlist(subset(employees, promo == 1, select = engagement))
# Perform the Mann-Whitney U (aka Wilcoxon rank sum) test
wilcox.test(no_promo, promo)
# Set seed for reproducible results
set.seed(1234)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% treat_ids, select = employee_id))
# Initialize dfs for pre/post metrics
treat_metrics = data.frame(pre_ind = numeric(length(treat_ids)),
rand_num = rnorm(length(treat_ids), mean = 30, sd = 5) * .001,
post_ind = numeric(length(treat_ids)),
diff = numeric(length(treat_ids)))
ctrl_metrics = data.frame(pre_ind = numeric(length(ctrl_ids)),
rand_num = rnorm(length(ctrl_ids), mean = 15, sd = 5) * .001,
post_ind = numeric(length(ctrl_ids)),
diff = numeric(length(ctrl_ids)))
# Store happiness indices for treatment and control groups
treat_metrics$pre_ind <- unlist(subset(employees, employee_id %in% treat_ids, select = happiness_ind))
ctrl_metrics$pre_ind <- unlist(subset(employees, employee_id %in% ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
treat_metrics$post_ind <- treat_metrics$pre_ind + treat_metrics$rand_num
ctrl_metrics$post_ind <- ctrl_metrics$pre_ind + ctrl_metrics$rand_num
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
treat_metrics$post_ind <- if(treat_metrics$post_ind > 4) {4} else {treat_metrics$post_ind}
ctrl_metrics$post_ind <- if(ctrl_metrics$post_ind > 4) {4} else {ctrl_metrics$post_ind}
# Calculate pre/post differences
treat_metrics$diff <- treat_metrics$post_ind - treat_metrics$pre_ind
ctrl_metrics$diff <- ctrl_metrics$post_ind - ctrl_metrics$pre_ind
# Histogram for distribution of pre/post treatment group differences
p_treat <- ggplot2::ggplot() +
ggplot2::aes(treat_metrics$diff) +
ggplot2::labs(title = "Treatment Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Histogram for distribution of pre/post control group differences
p_ctrl <- ggplot2::ggplot() +
ggplot2::aes(ctrl_metrics$diff) +
ggplot2::labs(title = "Control Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Display histograms side-by-side
ggpubr::ggarrange(p_treat, p_ctrl, ncol = 2, nrow = 1)
?t.test
# Compute Shapiro-Wilk test of normality
shapiro.test(treat_metrics$diff)
shapiro.test(ctrl_metrics$diff)
t.test(treat_metrics$post_ind, treat_metrics$pre_ind, paired = TRUE, alternative = "greater")
# Perform one-tailed paired samples t-test for control group
t.test(ctrl_metrics$post_ind, ctrl_metrics$pre_ind, paired = TRUE, alternative = "greater")
# Set seed for reproducible results
set.seed(1234)
# Derive happiness index from survey variables
employees$happiness_ind <- (employees$engagement + employees$env_sat + employees$job_sat + employees$rel_sat) / 4
# Sample size of frequent travelers
n = nrow(subset(employees, business_travel == 'Travel_Frequently', select = employee_id))
# Randomly assign half of frequent travelers to treatment and control groups
treat_ids <- sample(unlist(subset(employees, business_travel == 'Travel_Frequently', select = employee_id)), floor(n * .5))
ctrl_ids <- unlist(subset(employees, business_travel == 'Travel_Frequently' & !employee_id %in% treat_ids, select = employee_id))
# Initialize dfs for pre/post metrics
treat_metrics = data.frame(pre_ind = numeric(length(treat_ids)),
rand_num = rnorm(length(treat_ids), mean = 15, sd = 5) * .001,
post_ind = numeric(length(treat_ids)),
diff = numeric(length(treat_ids)))
ctrl_metrics = data.frame(pre_ind = numeric(length(ctrl_ids)),
rand_num = rnorm(length(ctrl_ids), mean = 0, sd = 1) * .001,
post_ind = numeric(length(ctrl_ids)),
diff = numeric(length(ctrl_ids)))
# Store happiness indices for treatment and control groups
treat_metrics$pre_ind <- unlist(subset(employees, employee_id %in% treat_ids, select = happiness_ind))
ctrl_metrics$pre_ind <- unlist(subset(employees, employee_id %in% ctrl_ids, select = happiness_ind))
# Create vectors with artificially inflated post-intervention happiness indices
treat_metrics$post_ind <- treat_metrics$pre_ind + treat_metrics$rand_num
ctrl_metrics$post_ind <- ctrl_metrics$pre_ind + ctrl_metrics$rand_num
# Force an upper bound of 4 to adjusted index scores (variables were measured using a 4-point Likert scale)
treat_metrics$post_ind <- if(treat_metrics$post_ind > 4) {4} else {treat_metrics$post_ind}
ctrl_metrics$post_ind <- if(ctrl_metrics$post_ind > 4) {4} else {ctrl_metrics$post_ind}
# Calculate pre/post differences
treat_metrics$diff <- treat_metrics$post_ind - treat_metrics$pre_ind
ctrl_metrics$diff <- ctrl_metrics$post_ind - ctrl_metrics$pre_ind
# Histogram for distribution of pre/post treatment group differences
p_treat <- ggplot2::ggplot() +
ggplot2::aes(treat_metrics$diff) +
ggplot2::labs(title = "Treatment Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Histogram for distribution of pre/post control group differences
p_ctrl <- ggplot2::ggplot() +
ggplot2::aes(ctrl_metrics$diff) +
ggplot2::labs(title = "Control Group", x = "Happiness Index Differences", y = "Frequency") +
ggplot2::geom_histogram(fill = "#414141") +
ggplot2::theme_bw() +
ggplot2::theme(plot.title = element_text(hjust = 0.5))
# Display histograms side-by-side
ggpubr::ggarrange(p_treat, p_ctrl, ncol = 2, nrow = 1)
# Compute Shapiro-Wilk test of normality
shapiro.test(treat_metrics$diff)
shapiro.test(ctrl_metrics$diff)
# Perform one-tailed paired samples t-test for control group
t.test(ctrl_metrics$post_ind, ctrl_metrics$pre_ind, paired = TRUE, alternative = "greater")
# Perform one-tailed paired samples t-test for treatment group
t.test(treat_metrics$post_ind, treat_metrics$pre_ind, paired = TRUE, alternative = "greater")
treat_metrics$post_ind - treat_metrics$pre_ind
mean(treat_metrics$post_ind - treat_metrics$pre_ind)
mean(ctrl_metrics$post_ind - ctrl_metrics$pre_ind)
# Perform Wilcoxon Signed-Rank test
wilcox.test(treat_metrics$post_ind, treat_metrics$pre_ind, paired = TRUE)
# Perform Wilcoxon Signed-Rank test
wilcox.test(ctrl_metrics$post_ind, ctrl_metrics$pre_ind, paired = TRUE)
