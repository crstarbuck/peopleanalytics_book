names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
get.turnover.rate <- function(year, month, job, level, remote){
if (job == 'People Scientist') {
y = runif(1,7.5,8.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.4)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,6,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,4.5,5.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,5,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,6,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
View(data)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
get.turnover.rate <- function(year, month, job, level, remote){
if (job == 'People Scientist') {
y = runif(1,8,8.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.4)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,6.5,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,5,5.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,6,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,6.5,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,8,8.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.4)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,6.5,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,5,5.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,6,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,6.5,7) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.4)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,8.5,9) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,7,7.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,5.5,6) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,7,7.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7,7.5) + runif(1,1.3,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,8.5,9) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,7,7.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,5.5,6) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,7,7.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7,7.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,9,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,56.5,7) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7.5,8) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,9,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,6.5,7) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7.5,8) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,9,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + runif(1,.03,.07)*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,6.5,7) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7.5,8) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,9,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 + runif(1,.03,.07)*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,6.5,7) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7.5,8) + runif(1,1.5,1.7)*year + 6*month - runif(1,.03,.07)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,9,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + runif(1,.3,.7)*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,6.5,7) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7.5,8) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,8.5,9) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,6.5,7) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,7,7.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,10,10.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,8.5,9) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,10,10.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,8.5,9) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,10,10.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,8.5,9) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(y)
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = round(get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))), 2))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
library(ggplot2)
library(dplyr)
years <- 1:5
months <- 1:12
jobs <- c('People Scientist', 'Data Engineer', 'People Analyst', 'BI Developer', 'Insights Consultant')
levels <- 1:5
remote <- c('Yes', 'No')
combos <- expand.grid(years, months, jobs, levels, remote)
names(combos)[1] <- "year"
names(combos)[2] <- "month"
names(combos)[3] <- "job"
names(combos)[4] <- "level"
names(combos)[5] <- "remote"
# Generate data per specified quadratic and cubic equations, along with some random noise
get.turnover.rate <- function(year, month, job, level, remote){
set.seed(1234)
if (job == 'People Scientist') {
y = runif(1,10,10.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 + .02*month^3 - runif(1,.2,.3)*level - runif(1,1,2)*remote} else if (job == 'Data Engineer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'People Analyst') {
y = runif(1,8,8.5) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'BI Developer') {
y = runif(1,9.5,10) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else if (job == 'Insights Consultant') {
y = runif(1,8.5,9) + runif(1,1.5,1.7)*year + 6*month - runif(1,.3,.7)*month^2 - runif(1,.2,.3)*level - runif(1,1,2)*remote } else { y = 0 }
return(round(y, 2))
}
data = NULL
for (i in 1:nrow(combos)){
data <- rbind(data, cbind.data.frame(
year = combos[i,'year'],
month = combos[i,'month'],
job = combos[i,'job'],
level = combos[i,'level'],
remote = combos[i,'remote'],
turnover_rate = get.turnover.rate(combos[i,'year'], combos[i,'month'], combos[i,'job'], combos[i,'level'], ifelse(combos[i,'remote'] == 'Yes', 1, 0))))
}
write.csv(data, "/Users/craig.starbuck/Library/Mobile Documents/com~apple~CloudDocs/Documents/People Analytics Book/GitHub/peopleanalytics_lifecycle_book/data/turnover_trends.csv", row.names = FALSE)
View(data)
