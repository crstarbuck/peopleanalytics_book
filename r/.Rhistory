labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(binwidth = 1, fill = "#404040") +
geom_density(fill = "#F85700", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), color = "#000000", fill = "#0099F8") +
geom_density(color = "#000000", fill = "#F85700", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(color = "#000000", fill = "#F85700", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#F85700", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#D9D9D9", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_density(fill = "#D9D9D9", alpha = 0.6) +
geom_histogram(aes(y = ..density..), fill = "#404040")
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#D9D9D9", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#F2F2F2", alpha = 0.6)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#F2F2F2", alpha = 0.2)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#F2F2F2", alpha = 0.1)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "#F2F2F2", alpha = 0.1)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#404040") +
geom_density(fill = "#F2F2F2", alpha = 0.1)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "#F2F2F2", alpha = 0.1)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "Density") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "#F2F2F2", alpha = 0.1)
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "Density") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626")
# Produce histogram to visualize population distribution
ggplot() +
aes(rand.unif) +
labs(title = "Uniform Population Distribution", x = "x", y = "N") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626")
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(5,10,25,50,100)
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
avg_val[draw_num] <- mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
}
}
# Initialize empty vector to hold average sample values
avg_vals <- vector()
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
avg_val[draw_num] <- mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
}
}
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
avg_vals[draw_num] <- mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
}
}
avg_vals
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
avg_vals <- mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
}
}
avg_vals
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(5,10,25,50,100)
# Initialize empty vector to hold average sample values
avg_vals <- vector()
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
avg_vals[draw_num] <- mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
}
# Produce histogram to visualize population distribution
ggplot() +
aes(avg_vals) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626")
}
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x-bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# For each sample_n, draw
for (n in sample_n) {
for (draw_num in 1:samples) {
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
sample_means
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626")
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") + facet_wrap(~n)
# Load data viz library
library(tidyverse)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") + facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(5,10,25,50)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw_num in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") + facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(5,10,25,50,75,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw_num in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") + facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw_num in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") + facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
geom_density(fill = "#F2F2F2", alpha = 0.1) +
facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "#F2F2F2", alpha = 0.1) +
facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "lightblue", alpha = 0.1) +
facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "lightblue") +
facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(aes(y = ..density..), fill = "#262626") +
geom_density(fill = "lightblue", alpha = 0.5) +
facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_density(fill = "lightblue") +
geom_histogram(aes(y = ..density..), fill = "#262626") +
facet_wrap(~n)
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,40,50)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
facet_wrap(~n)
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
facet_wrap(~n)
mean(sample(rand.unif, n, replace = FALSE, prob = NULL)
mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
mean(sample(rand.unif, n, replace = FALSE, prob = NULL)
mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# Set seed for reproducible random samples
set.seed(1234)
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
# Set seed for reproducible random numbers
set.seed(1234)
mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# Set seed for reproducible random samples
set.seed(1234)
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# Set seed for reproducible random samples
set.seed(1234)
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
# Define number of samples to draw from population distribution
samples <- 100
# Populate vector with sample sizes
sample_n <- c(1,5,10,25,50,100)
# Initialize empty data frame to hold sample means
sample_means = NULL
# Set seed for reproducible random samples
set.seed(1234)
# For each n, draw random samples
for (n in sample_n) {
for (draw in 1:samples) {
# Store sample means in data frame
sample_means <- rbind(sample_means, cbind.data.frame(
n = n,
x_bar = mean(sample(rand.unif, n, replace = FALSE, prob = NULL))))
}
}
mean(sample(rand.unif, n, replace = FALSE, prob = NULL))
# Produce histograms to visualize distributions of sample means
sample_means %>% ggplot() +
aes(x = x_bar, fill = n) +
labs(title = "Distribution of Sample Means", x = "x-bar", y = "n") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_histogram(fill = "#262626") +
facet_wrap(~n)
